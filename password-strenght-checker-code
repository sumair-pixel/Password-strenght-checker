#include <iostream>
#include <fstream>
#include <cstdlib>
#include <cstring>
using namespace std;

bool isnumerical(char arr[], int check);
bool iscaps(char arr[], int check);
bool issmall(char arr[], int check);
bool isspecial(char arr[], int check);
void generatePassword(char password[], int length);

int main() {
    const int size = 50;
    char arr[size] = {'\0'};
    char arr2[size] = {'\0'};
    int check = 0;
    bool is_true = false;
    int64_t permutation = 1;
    bool flag = true;

    cout << "Do you want to:\n"
         << "0 - Check password strength\n"
         << "1 - Generate a random password\n";
    int choice;
    cin >> choice;
    if (choice == 0) {
        while (flag) {
            do {
                cout << "Enter your password :\n";
                cin >> arr;

                check = strlen(arr);

                ifstream fin("passwords.txt");
                is_true = false;
                while (fin.getline(arr2, size)) {
                    if (strcmp(arr2, arr)==0) {
                        is_true = true;
                        cout << "Password is too common, try another.\n";
                        cin.ignore();
                        break;
                    }
                }
                fin.close();
            } while (is_true);
            permutation = 1;
            for (int i = 0; i < check; i++) {
                while(arr[i] ==arr[i+1])
                {
                    i++;
                }
                if (iscaps(&arr[i], 1) || issmall(&arr[i], 1)) {
                    permutation *= 26;
                } else if (isnumerical(&arr[i], 1)) {
                    permutation *= 10;
                } else if (isspecial(&arr[i], 1)) {
                    permutation *= 33;
                }
            }
            if (permutation < 10000000000LL) {
                cout << "Your password is weak, try again.\n";
            } else if (permutation < 100000000000000LL) {
                cout << "Your password is moderate.\n";
                flag = false;
            } else {
                cout << "Your password is strong.\n";
                flag = false;
            }
            fstream fout("passwords.txt", ios::app);
            fout << arr << endl;
            fout.close();
        }
    } else if (choice == 1) {
        char randomPassword[size];
        int length;

        cout << "Enter desired length for the random password: ";
        cin >> length;

        generatePassword(randomPassword, length);
        cout << "Generated Random Password: " << randomPassword << "\n";
    } else {
        cout << "Invalid choice. Exiting program.\n";
    }

    return 0;
}

bool iscaps(char arr[], int check) {
    for (int i = 0; i < check; i++) {
        if (arr[i] >= 'A' && arr[i] <= 'Z') {
            return true;
        }
    }
    return false;
}

bool issmall(char arr[], int check) {
    for (int i = 0; i < check; i++) {
        if (arr[i] >= 'a' && arr[i] <= 'z') {
            return true;
        }
    }
    return false;
}

bool isnumerical(char arr[], int check) {
    for (int i = 0; i < check; i++) {
        if (arr[i] >= '0' && arr[i] <= '9') {
            return true;
        }
    }
    return false;
}

bool isspecial(char arr[], int check) {
    for (int i = 0; i < check; i++) {
        if (!(arr[i] >= 'A' && arr[i] <= 'Z') &&
            !(arr[i] >= 'a' && arr[i] <= 'z') &&
            !(arr[i] >= '0' && arr[i] <= '9')) {
            return true;
        }
    }
    return false;
}

void generatePassword(char password[], int length) {
    const char all[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()-_=+[]{}|;:,.<>?/~";
    for (int i = 0; i < length; i++) {
        password[i] = all[rand() % (95)];
    }
    password[length] = '\0';
}

